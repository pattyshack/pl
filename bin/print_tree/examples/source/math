let one = 1

type Iter$[Item] trait(
  func next() Item
)

alias StringIter Iter$[String]

type Fib struct(
  prev Int
  curr Int

  func nextImpl(f >_) Int {
    var prev = f.curr
    f.curr += f.prev
    f.prev = prev
    f.curr
  }

) implements Iter

func next(f >&Fact) Int {
  f.next()
}

func fact(i Int) Int {
  if i <= 0 {
    return one
  }

  return i * fact(i - 1)
}

func receiver(r >Obj, _ >Obj, >Obj) {}
func arg(a Arg, _ Arg, Arg) {}
func vararg(v ...Vararg, _ ...Vararg, ...Vararg) {}
